# Try to find AnyDSL Runtime library and include path.
# Once done this will define
#
# AnyDSL_runtime_DIR
# AnyDSL_runtime_LIBRARIES
# AnyDSL_runtime_INCLUDE_DIRS
# AnyDSL_runtime_FOUND

cmake_minimum_required(VERSION 3.1)

find_path(AnyDSL_runtime_DIR
    NAMES
        anydsl_runtime-config.cmake
    PATHS
        ${AnyDSL_runtime_DIR}
        $ENV{AnyDSL_runtime_DIR}
        ${CMAKE_CURRENT_LIST_DIR}
        "@CMAKE_CURRENT_BINARY_DIR@"
        "@CMAKE_INSTALL_PREFIX@"
    PATH_SUFFIXES
        share/AnyDSL_runtime/cmake
)

find_path(AnyDSL_runtime_ROOT_DIR
    NAMES
        cmake/anydsl_runtime-config.cmake.in
        src/anydsl_runtime.h
        src/anydsl_runtime.hpp
    PATHS
        ${AnyDSL_runtime_ROOT_DIR}
        "@CMAKE_CURRENT_SOURCE_DIR@"
        "@CMAKE_SOURCE_DIR@"
)

find_path(AnyDSL_runtime_INCLUDE_DIR
    NAMES
        anydsl_runtime.h
        anydsl_runtime.hpp
    PATHS
        ${AnyDSL_runtime_ROOT_DIR}/src
)
set(AnyDSL_runtime_INCLUDE_DIRS ${AnyDSL_runtime_INCLUDE_DIR})

if(NOT TARGET runtime)
    include(${AnyDSL-runtime_DIR}/runtime-exports.cmake)
endif()

set(AnyDSL_runtime_LIBRARIES runtime;@CONF_RUNTIME_LIBRARIES@)
if(MSVC)
    set(AnyDSL_runtime_LIBRARIES ${AnyDSL_runtime_LIBRARIES} optimized msvcrt debug msvcrtd)
endif()

macro(AnyDSL_runtime_files outfiles)
    cmake_parse_arguments("PARGS" "" "FRONTEND" "" ${ARGN})
    if(NOT "${PARGS_UNPARSED_ARGUMENTS}" STREQUAL "")
        message(FATAL_ERROR "Unparsed arguments ${PARGS_UNPARSED_ARGUMENTS}")
    endif()

    string(TOLOWER ${PARGS_FRONTEND} _frontend)

    if(NOT _frontend STREQUAL "impala")
        message(ERROR "Unsupported frontend: ${_frontend} (supported frontends: impala)")
    endif()

    set(_backend_instrinsics
        ${AnyDSL_runtime_ROOT_DIR}/platforms/intrinsics_cpu.impala
        ${AnyDSL_runtime_ROOT_DIR}/platforms/intrinsics_cuda.impala
        ${AnyDSL_runtime_ROOT_DIR}/platforms/intrinsics_nvvm.impala
        ${AnyDSL_runtime_ROOT_DIR}/platforms/intrinsics_opencl.impala
        ${AnyDSL_runtime_ROOT_DIR}/platforms/intrinsics_amdgpu.impala)

    set(${outfiles} ${${outfiles}}
        ${AnyDSL_runtime_ROOT_DIR}/src/runtime.impala
        ${AnyDSL_runtime_ROOT_DIR}/platforms/intrinsics.impala
        ${AnyDSL_runtime_ROOT_DIR}/platforms/intrinsics_thorin.impala
        ${_backend_instrinsics})
endmacro()

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(AnyDSL_runtime DEFAULT_MSG AnyDSL_runtime_DIR AnyDSL_runtime_LIBRARIES AnyDSL_runtime_INCLUDE_DIRS)

mark_as_advanced(AnyDSL_runtime_LIBRARY AnyDSL_runtime_LIBRARY_DEBUG AnyDSL_runtime_LIBRARY_RELEASE AnyDSL_runtime_LIBS_DIR AnyDSL_runtime_LIBNAME AnyDSL_runtime_ROOT_DIR AnyDSL_runtime_INCLUDE_DIR)
